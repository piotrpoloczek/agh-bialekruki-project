package pl.edu.agh.mwo.report.project.report;

/**
 * Enumerates the different types of reports that can be generated by the system.
 * Each report type corresponds to a specific data aggregation and presentation format.
 */
public enum ReportType {
    /**
     * Report showing total hours worked by each user across all projects.
     * Provides a summary of user activity regardless of project assignment.
     */
    USER_HOURS_ALL_PROJECTS,

    /**
     * Report showing hours distribution across different projects.
     * Aggregates work hours by project regardless of user assignments.
     */
    HOURS_PER_PROJECT,

    /**
     * Detailed report showing work hours per user with additional breakdown.
     * Provides comprehensive time tracking data for individual users.
     */
    DETAILS_PER_USER,

    /**
     * Report showing the top 10 entries based on specific criteria.
     * Typically used to highlight highest time consumers or other key metrics.
     */
    TOP_10,

    /**
     * Report showing the task only with specified tags.
     * Used to filter data based on tags.
     */
    FILTER_BY_TAG;


    /**
     * Converts a numeric value to the corresponding ReportType enum constant.
     *
     * @param x The numeric value representing the report type:
     *          <ul>
     *            <li>1 - USER_HOURS_ALL_PROJECTS</li>
     *            <li>2 - HOURS_PER_PROJECT</li>
     *            <li>3 - DETAILS_PER_USER</li>
     *            <li>4 - TOP_10</li>
     *            <li>5 - FILTER_BY_TAG</li>
     *          </ul>
     * @return The corresponding ReportType enum constant, or null if no match is found
     */
    public static ReportType fromString(String x) {
        switch (x) {
            case "1":
                return USER_HOURS_ALL_PROJECTS;
            case "2":
                return HOURS_PER_PROJECT;
            case "3":
                return DETAILS_PER_USER;
            case "4":
                return TOP_10;
            case "5":
                return FILTER_BY_TAG;
            default:
                return null;
        }
    }
}